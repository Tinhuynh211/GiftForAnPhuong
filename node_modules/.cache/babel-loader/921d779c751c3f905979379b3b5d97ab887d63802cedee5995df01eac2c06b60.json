{"ast":null,"code":"// questionsActions.js\nimport { deleteQuestion as deleteQuestionApi, getAllQuestions, addQuestion } from \"../../apis/index.js\";\nimport { questionsTypes } from \"../ActionTypes/questionsTypes.js\";\nexport const fetchAllQuestions = () => async dispatch => {\n  try {\n    dispatch({\n      type: questionsTypes.LOAD_QUESTION_LOADING,\n      payload: true\n    });\n    const res = await getAllQuestions();\n    dispatch({\n      type: questionsTypes.FETCH_ALL_QUESTIONS,\n      payload: res\n    });\n  } catch (err) {\n    console.error(\"Error fetching questions:\", err);\n  } finally {\n    dispatch({\n      type: questionsTypes.LOAD_QUESTION_LOADING,\n      payload: false\n    });\n  }\n};\nexport const addNewQuestion = data => async dispatch => {\n  try {\n    dispatch({\n      type: questionsTypes.LOAD_QUESTION_LOADING,\n      payload: true\n    });\n    const res = await addQuestion(data);\n    dispatch({\n      type: questionsTypes.ADD_NEW_QUESTION,\n      payload: res\n    });\n  } catch (err) {\n    console.error(\"Error adding new question:\", err);\n  } finally {\n    dispatch({\n      type: questionsTypes.LOAD_QUESTION_LOADING,\n      payload: false\n    });\n  }\n};\nexport const deleteQuestion = questionId => async dispatch => {\n  try {\n    dispatch({\n      type: questionsTypes.LOAD_QUESTION_LOADING,\n      payload: true\n    });\n    await deleteQuestionApi(questionId);\n    dispatch({\n      type: questionsTypes.DELETE_QUESTION,\n      payload: questionId\n    });\n  } catch (err) {\n    console.error(\"Error deleting question:\", err);\n  } finally {\n    dispatch({\n      type: questionsTypes.LOAD_QUESTION_LOADING,\n      payload: false\n    });\n  }\n};","map":{"version":3,"names":["deleteQuestion","deleteQuestionApi","getAllQuestions","addQuestion","questionsTypes","fetchAllQuestions","dispatch","type","LOAD_QUESTION_LOADING","payload","res","FETCH_ALL_QUESTIONS","err","console","error","addNewQuestion","data","ADD_NEW_QUESTION","questionId","DELETE_QUESTION"],"sources":["C:/Users/ADMIN/Desktop/GG/Survey/src/redux/actions/questionsAction.js"],"sourcesContent":["// questionsActions.js\nimport { deleteQuestion as deleteQuestionApi, getAllQuestions, addQuestion } from \"../../apis/index.js\";\nimport { questionsTypes } from \"../ActionTypes/questionsTypes.js\";\n\nexport const fetchAllQuestions = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: questionsTypes.LOAD_QUESTION_LOADING,\n      payload: true,\n    });\n\n    const res = await getAllQuestions();\n\n    dispatch({\n      type: questionsTypes.FETCH_ALL_QUESTIONS,\n      payload: res,\n    });\n  } catch (err) {\n    console.error(\"Error fetching questions:\", err);\n  } finally {\n    dispatch({\n      type: questionsTypes.LOAD_QUESTION_LOADING,\n      payload: false,\n    });\n  }\n};\n\nexport const addNewQuestion = (data) => async (dispatch) => {\n  try {\n    dispatch({\n      type: questionsTypes.LOAD_QUESTION_LOADING,\n      payload: true,\n    });\n\n    const res = await addQuestion(data);\n\n    dispatch({\n      type: questionsTypes.ADD_NEW_QUESTION,\n      payload: res,\n    });\n  } catch (err) {\n    console.error(\"Error adding new question:\", err);\n  } finally {\n    dispatch({\n      type: questionsTypes.LOAD_QUESTION_LOADING,\n      payload: false,\n    });\n  }\n};\n\nexport const deleteQuestion = (questionId) => async (dispatch) => {\n  try {\n    dispatch({\n      type: questionsTypes.LOAD_QUESTION_LOADING,\n      payload: true,\n    });\n\n    await deleteQuestionApi(questionId);\n\n    dispatch({\n      type: questionsTypes.DELETE_QUESTION,\n      payload: questionId,\n    });\n  } catch (err) {\n    console.error(\"Error deleting question:\", err);\n  } finally {\n    dispatch({\n      type: questionsTypes.LOAD_QUESTION_LOADING,\n      payload: false,\n    });\n  }\n};\n"],"mappings":"AAAA;AACA,SAASA,cAAc,IAAIC,iBAAiB,EAAEC,eAAe,EAAEC,WAAW,QAAQ,qBAAqB;AACvG,SAASC,cAAc,QAAQ,kCAAkC;AAEjE,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACzD,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAEH,cAAc,CAACI,qBAAqB;MAC1CC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF,MAAMC,GAAG,GAAG,MAAMR,eAAe,CAAC,CAAC;IAEnCI,QAAQ,CAAC;MACPC,IAAI,EAAEH,cAAc,CAACO,mBAAmB;MACxCF,OAAO,EAAEC;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;EACjD,CAAC,SAAS;IACRN,QAAQ,CAAC;MACPC,IAAI,EAAEH,cAAc,CAACI,qBAAqB;MAC1CC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMM,cAAc,GAAIC,IAAI,IAAK,MAAOV,QAAQ,IAAK;EAC1D,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAEH,cAAc,CAACI,qBAAqB;MAC1CC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF,MAAMC,GAAG,GAAG,MAAMP,WAAW,CAACa,IAAI,CAAC;IAEnCV,QAAQ,CAAC;MACPC,IAAI,EAAEH,cAAc,CAACa,gBAAgB;MACrCR,OAAO,EAAEC;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;EAClD,CAAC,SAAS;IACRN,QAAQ,CAAC;MACPC,IAAI,EAAEH,cAAc,CAACI,qBAAqB;MAC1CC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMT,cAAc,GAAIkB,UAAU,IAAK,MAAOZ,QAAQ,IAAK;EAChE,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAEH,cAAc,CAACI,qBAAqB;MAC1CC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF,MAAMR,iBAAiB,CAACiB,UAAU,CAAC;IAEnCZ,QAAQ,CAAC;MACPC,IAAI,EAAEH,cAAc,CAACe,eAAe;MACpCV,OAAO,EAAES;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAON,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;EAChD,CAAC,SAAS;IACRN,QAAQ,CAAC;MACPC,IAAI,EAAEH,cAAc,CAACI,qBAAqB;MAC1CC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}