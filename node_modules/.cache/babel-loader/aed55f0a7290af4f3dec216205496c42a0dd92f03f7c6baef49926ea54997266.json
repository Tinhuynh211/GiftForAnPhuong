{"ast":null,"code":"import axios from \"axios\";\nexport const getAllQuestions = async () => {\n  return fetch(\"http://localhost:3001/questions\").then(res => res.json()).catch(err => console.log(err));\n};\nexport const addQuestion = async question => {\n  return fetch(\"http://localhost:3001/questions\", {\n    method: \"POST\",\n    body: JSON.stringify(question),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(res => res.json()).catch(err => console.log(err));\n};\nexport const deleteQuestionId = questionId => {\n  return async dispatch => {\n    try {\n      // Make an HTTP DELETE request to your json-server endpoint\n      await axios.delete(`http://localhost:3001/questions/${questionId}`);\n\n      // If the deletion was successful, dispatch the action to update the Redux state\n      dispatch({\n        type: \"DELETE_QUESTION\",\n        payload: {\n          questionId\n        }\n      });\n    } catch (error) {\n      // Handle errors here, such as displaying an error message\n      console.error(\"Error deleting question:\", error);\n    }\n  };\n};","map":{"version":3,"names":["axios","getAllQuestions","fetch","then","res","json","catch","err","console","log","addQuestion","question","method","body","JSON","stringify","headers","credentials","deleteQuestionId","questionId","dispatch","delete","type","payload","error"],"sources":["C:/Users/ADMIN/Desktop/Survey/src/apis/index.js"],"sourcesContent":["import axios from \"axios\";\nexport const getAllQuestions = async () => {\n  return fetch(\"http://localhost:3001/questions\")\n    .then((res) => res.json())\n    .catch((err) => console.log(err));\n};\n\nexport const addQuestion = async (question) => {\n  return fetch(\"http://localhost:3001/questions\", {\n    method: \"POST\",\n    body: JSON.stringify(question),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"same-origin\",\n  })\n    .then((res) => res.json())\n    .catch((err) => console.log(err));\n};\n\n\nexport const deleteQuestionId = (questionId) => {\n  return async (dispatch) => {\n    try {\n      // Make an HTTP DELETE request to your json-server endpoint\n      await axios.delete(`http://localhost:3001/questions/${questionId}`);\n\n      // If the deletion was successful, dispatch the action to update the Redux state\n      dispatch({\n        type: \"DELETE_QUESTION\",\n        payload: { questionId },\n      });\n    } catch (error) {\n      // Handle errors here, such as displaying an error message\n      console.error(\"Error deleting question:\", error);\n    }\n  };\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,OAAOC,KAAK,CAAC,iCAAiC,CAAC,CAC5CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACrC,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAOC,QAAQ,IAAK;EAC7C,OAAOT,KAAK,CAAC,iCAAiC,EAAE;IAC9CU,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC;IAC9BK,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,WAAW,EAAE;EACf,CAAC,CAAC,CACCd,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACrC,CAAC;AAGD,OAAO,MAAMW,gBAAgB,GAAIC,UAAU,IAAK;EAC9C,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF;MACA,MAAMpB,KAAK,CAACqB,MAAM,CAAE,mCAAkCF,UAAW,EAAC,CAAC;;MAEnE;MACAC,QAAQ,CAAC;QACPE,IAAI,EAAE,iBAAiB;QACvBC,OAAO,EAAE;UAAEJ;QAAW;MACxB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd;MACAhB,OAAO,CAACgB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}